<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <!--视图解析器
           用于jsp，也就是View页面的解析
           解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
       -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsps/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <!--<bean id="mappingJackson2HttpMessageConverter"-->
          <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>text/plain;charset=utf-8</value>-->
                <!--<value>application/json;charset=utf-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven conversion-service="conversionService">
        <!--<mvc:message-converters>-->
            <!--<ref bean="mappingJackson2HttpMessageConverter"/>-->
        <!--</mvc:message-converters>-->
    </mvc:annotation-driven>

    <!--controller 扫描配置
        多处扫描 用，隔开
        base-package 填写controller包路径
        例如controller 是
        com.xx.xx.controller
        那就填com.xx.xx.controller
        暂时不写，我也不知道我想写什么进去。
    -->
    <context:component-scan base-package="cn.edu.bnuz.seawas.controller"></context:component-scan>

    <!--静态资源文件访问方案一 ，将无法mapping到Controller的path交给Default servlet handler处理-->
    <mvc:default-servlet-handler />

    <!-- 静态资源文件访问访问二，
        location元素: 是对于web或者webroot或者webcontent目录的相对路径
        mapping元素:表示以/xxx 开头请求的路径，都不会进行拦截，当作静态资源文件。
    -->
    <!--对所有的静态资源文件的整体配置（方案二）-->
    <mvc:resources mapping="/resource/**" location="/WEB-INF/resources/" cache-period="315360"/>

    <!--分别对不同的静态资源文件 例如/css /js /image  等进行分别配置-->
  <!--  // <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>
    // <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>
    // <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>-->

    <!--还应该在这里配置拦截器
        这里就简单的配置一个登陆拦截器。
    -->
    <!--<mvc:interceptors>-->
    <!--<mvc:interceptor>-->
        <!--&lt;!&ndash;拦截主要的url请求路径   /pc//*  代表/pc/目录下的所有url请求都要拦截&ndash;&gt;-->
        <!--<mvc:mapping path="/pc/**"/>-->
        <!--&lt;!&ndash;-->
           <!--下面是排除拦截的url-->
           <!--也就是对应/pc//** 下不需要拦截的请求url-->
        <!--&ndash;&gt;-->

        <!--<mvc:exclude-mapping path="/pc/login"/>-->
        <!--<mvc:exclude-mapping path="/pc/loginsubmit"/>-->
        <!--<mvc:exclude-mapping path="/pc/logout"/>-->
        <!--&lt;!&ndash;拦截器示例&ndash;&gt;-->
            <!--&lt;!&ndash;日后配详细的&ndash;&gt;-->
        <!--&lt;!&ndash;&ndash;&gt;-->
         <!--<bean class="com.xxx.interceptor.PcInterceptor"></bean>-->
    <!--</mvc:interceptor>-->
    <mvc:interceptors>
        <!-- 多个拦截器，顺序执行 -->
        <mvc:interceptor>
            <mvc:mapping path="/admin/**"/>
            <mvc:mapping path="/activity/**"/>
            <mvc:mapping path="/discount/**"/>
            <mvc:mapping path="/equip/**"/>
            <mvc:mapping path="/productCount/**"/>
            <bean class="cn.edu.bnuz.seawas.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>

        <!-- 微信用户拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/wechat/**"/>
            <!--<mvc:mapping path="/wechat/index/"/>-->
            <bean class="cn.edu.bnuz.seawas.interceptor.WeChatInterceptor"/>
        </mvc:interceptor>

        <!-- 领队权限拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/wechat/**"/>
            <bean class="cn.edu.bnuz.seawas.interceptor.LeaderInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 配置MultipartResolver 用于文件上传 使用spring的CommosMultipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize"><value>104857600</value></property>
        <property name="defaultEncoding"><value>UTF-8</value></property>
    </bean>

    <!-- 全局异常处理器 -->
    <bean class="cn.edu.bnuz.seawas.common.resolver.GlobalExceptionResolver"/>

    <!-- 自定义参数绑定 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!-- 转换器 -->
        <property name="converters">
            <set>
                <!-- 日期类型转换 -->
                <bean class="cn.edu.bnuz.seawas.common.convertor.DateConverter"/>
            </set>
        </property>
    </bean>


    <!-- 系统配置扫描 -->
    <context:component-scan base-package="cn.edu.bnuz.seawas.sysconfig"/>
</beans>