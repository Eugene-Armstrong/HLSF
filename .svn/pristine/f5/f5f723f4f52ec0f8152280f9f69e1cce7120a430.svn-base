<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.bnuz.seawas.dao.WxActivityDetailMapper" >

    <resultMap id="wxProductDetailMap" type="cn.edu.bnuz.seawas.vo.WxProductDetailVo">
        <id column="id" property="id" />
        <result column="type" property="type" />
        <result column="name" property="name" />
        <result column="picUrl" property="picUrl" />
        <result column="degreeDifficulty" property="degreeDifficulty" />
        <result column="readNumber" property="readNumber" />
        <result column="productAvgVote" property="productAvgVote" />
        <result column="vote1" property="vote1" />
        <result column="vote2" property="vote2" />
        <result column="vote3" property="vote3" />
        <result column="vote4" property="vote4" />
        <result column="vote5" property="vote5" />
        <result column="voteNumber" property="voteNumber" />
        <result column="equipmentMessage" property="equipmentMessage" />
        <result column="disclaimer" property="disclaimer" />

        <!--
                一个产品对应多个活动
        -->
        <collection property="activityVoList" ofType="cn.edu.bnuz.seawas.vo.WxActivityVo">
            <id column="actId" property="id"/>
            <result column="actPrice" property="price"/>
            <result column="actDepartTime" property="departTime"/>
            <result column="actGatherPlace" property="gatherPlace"/>
            <result column="actTripNumber" property="tripNumber"/>
            <result column="actTotalNumber" property="totalNumber"/>
            <result column="actState" property="state"/>
            <result column="actQRCode" property="QRCode"/>
            <result column="actEndTime" property="endTime"/>
            <result column="actCloseTime" property="closeTime"/>
            <result column="actOnSalePrice" property="onSalePrice"/>
            <result column="actPriceIntroduce" property="priceIntroduce"/>
            <result column="actRoute" property="route"/>
            <result column="actProductIntroduce" property="productIntroduce"/>
            <result column="actNum" property="num"/>
            <result column="actDiscountRules" property="discountRules"/>

            <!--
                    一个活动对应多个领队
            -->
            <collection property="activityLeaderList" ofType="cn.edu.bnuz.seawas.entity.ActivityLeader">
                <id column="actLedId" property="id"/>
                <result column="actId" property="activityId"/>
                <result column="actLedLedid" property="leaderId"/>

                <!-- 领队 -->
                <association property="user" javaType="cn.edu.bnuz.seawas.entity.User">
                    <id column="actLedLedid" property="id"/>
                    <result column="userName" property="realName"/>
                    <result column="userNickName" property="nickName"/>
                    <result column="userWorkNo" property="workNo"/>
                    <result column="userScore" property="score"/>
                    <result column="userOpinionNum" property="opinionNum"/>
                    <result column="userHeadImgUrl" property="headImgUrl"/>
                </association>
            </collection>

            <!--
                    一个活动对应多个报名人情况
            -->
            <!--<collection property="signList" ofType="cn.edu.bnuz.seawas.entity.Sign">-->
                <!--<id column="signId" property="id"/>-->
                <!--<result column="signOrdersId" property="ordersId"/>-->
                <!--<result column="signName" property="name"/>-->
                <!--<result column="signSex" property="sex"/>-->
                <!--<result column="signAge" property="age"/>-->
            <!--</collection>-->
        </collection>
    </resultMap>

    <sql id="activityList" >
        t_activity.id AS actId,
        t_activity.price AS actPrice,
        t_activity.departTime AS actDepartTime,
        t_activity.gatherPlace AS actGatherPlace,
        t_activity.tripNumber AS actTripNumber,
        t_activity.totalNumber AS actTotalNumber,
        t_activity.state AS actState,
        t_activity.QRCode AS actQRCode,
        t_activity.endTime AS actEndTime,
        t_activity.closeTime AS actCloseTime,
        t_activity.onSalePrice AS actOnSalePrice,
        t_activity.priceIntroduce AS actPriceIntroduce,
        t_activity.route AS actRoute,
        t_activity.productIntroduce AS actProductIntroduce,
        t_activity.discountRules AS actDiscountRules
    </sql>

    <sql id="activityLeaderList">
        t_activityleader.id AS actLedId,
        t_activityleader.leaderId AS actLedLedid
    </sql>

    <sql id="userList">
        t_user.headImgUrl AS userHeadImgUrl,
        t_user.realName AS userName,
        t_user.nickName AS userNickName,
        t_user.workNo AS userWorkNo,
        t_user.score AS userScore,
        t_user.opinionNum AS userOpinionNum,
        t_user.leaderNum AS userLeaderNum
    </sql>


    <!--
                获取产品下有几个正在运作的活动
    -->
    <select id="getWxActivityNumber" resultType="java.lang.Integer">
        SELECT
          count(*)
            FROM t_activity
              <where>
                  productId = #{productId} AND
                  state != '活动中' AND
                  state != '未发布' AND
                  endTime >= NOW() AND
                  delFlag != '1' 
                  <if test="cityId != null">
                      AND (city = #{cityId} OR city = '')
                  </if>
              </where>
    </select>

    <!--
                    微信获取产品信息
    -->
    <select id="getWxProductDetails" resultType="cn.edu.bnuz.seawas.vo.WxProductDetailVo">
        SELECT
          t_product.*
            FROM t_product
              WHERE
                t_product.id = #{productId}
    </select>

    <!--
                wifi：微信获取获得单个产品-多个活动-多个领队信息->购买预览界面
    -->
    <select id="getWxProductActivitiesDetails" resultMap="wxProductDetailMap">
        SELECT
          t_product.*,
          <include refid="activityList" />,
          <include refid="activityLeaderList" />,
          <include refid="userList" />
	        FROM t_product,t_activity,t_activityleader,t_user
                WHERE
                  t_product.id = #{productId} AND
                  t_product.id = t_activity.productId AND
                  t_activityleader.activityId = t_activity.id AND
                  t_activityleader.leaderId = t_user.id AND
                  t_activity.endTime >= NOW() AND
                  t_activity.state != '活动中' AND
                  t_activity.state != '未发布'
                  <if test="cityId != null">
                      AND (t_activity.city = #{cityId} OR t_activity.city = '')
                  </if>
                  AND
                  t_activity.delFlag = '0'
                ORDER BY t_activity.departTime ASC
    </select>

    <!--
            wifi：通过活动id->获取已报名人数
    -->
    <select id="getSignNumber" resultType="java.lang.Integer">
        SELECT COUNT(*)
	    FROM t_sign
		WHERE t_sign.ordersId IN
		  (SELECT t_orders.id
		    FROM t_orders,t_activity
		      WHERE
		        t_activity.id = t_orders.activityId AND
		        t_activity.id = #{actId} AND
		        (t_orders.state = '2' OR
                t_orders.state = '3' OR
                t_orders.state = '1') AND
		        t_orders.delFlag = '0')
		AND t_sign.delFlag = '0'
    </select>

    <!--
            wifi：微信获取获得单个产品-单个活动-多个领队信息->购买确认界面
    -->
    <select id="getWxProductActivityDetails" resultMap="wxProductDetailMap">
        SELECT
            t_product.*,
            <include refid="activityList" />,
            <include refid="activityLeaderList" />,
            <include refid="userList" />
                FROM t_product,t_activity,t_activityleader,t_user
                    WHERE
                        t_product.id = #{productId} AND
                        t_product.id = t_activity.productId AND
                        t_activity.id = #{activityId} AND
                        t_activityleader.activityId = t_activity.id AND
                        t_activityleader.leaderId = t_user.id
    </select>

    <!--
                wifi：通过活动id获得已经报名的用户信息
    -->
    <select id="getWxParticipantsUsers" resultType="cn.edu.bnuz.seawas.entity.User">
        SELECT
          DISTINCT t_user.*
          FROM t_user,t_orders
            WHERE
              t_orders.activityId = #{activityId} AND
              t_orders.userId = t_user.id AND
              (t_orders.state = '2' OR
              t_orders.state = '3') AND
              t_orders.delFlag = '0'
    </select>

    <!--
                wifi：通过活动id获得带队的领队信息
    -->
    <select id="getWxParticipantsLeaders" resultType="cn.edu.bnuz.seawas.entity.User">
        SELECT
          t_user.*
          FROM t_user,t_activityleader
            WHERE
              t_activityleader.leaderId = t_user.id AND
              t_activityleader.activityId = #{activityId}
    </select>

    <!--
                wifi：通过openId获得用户的常用人信息
    -->
    <select id="getWxUsersContacts" resultType="cn.edu.bnuz.seawas.entity.Contact">
        SELECT
          t_contact.*
            FROM t_contact,t_user
                WHERE
                t_user.openid = #{openId} AND
                t_user.id = t_contact.userId
    </select>

    <!--
            wifi：浏览产品->产品浏览次数加一
    -->
    <update id="updateProductReadNumber">
        UPDATE
          t_product
            SET readNumber = readNumber + 1
            WHERE id = #{productId}
    </update>

    <!--
        wifi：浏览产品获取用户是否收藏
    -->
    <select id="getCollectionType" resultType="java.lang.Integer">
        SELECT
          count(*)
          FROM t_collection, t_user
          where
            t_user.openid = #{openId} AND
            t_user.id = t_collection.userId AND
            t_collection.productId = #{productId}
    </select>

    <!--
        wifi：收藏产品
    -->
    <insert id="changeCollectionTypeTrue">
        INSERT INTO
          t_collection(
            id,
            userId,
            productId,
            createTime
          )
          VALUES (
            #{id},
            #{userId},
            #{productId},
            #{createTime}
          )
    </insert>

    <!--
        wifi：取消收藏产品
    -->
    <delete id="changeCollectionTypeFalse">
        DELETE FROM
          t_collection
            WHERE
              userId = #{userId} AND
              productId = #{productId}
    </delete>
</mapper>